/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SenderZEVM,
  SenderZEVMInterface,
} from "../../../../contracts/prototypes/zevm/SenderZEVM";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "receiver",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "callReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "receiver",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "withdrawAndCallReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bb5380380610bb5833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610a9e806101176000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630abd890514610046578063116191b614610062578063a0a1730b14610080575b600080fd5b610060600480360381019061005b91906106b5565b61009c565b005b61006a6102a0565b6040516100779190610789565b60405180910390f35b61009a600480360381019061009591906107a4565b6102c4565b005b60008383836040516024016100b3939291906108e0565b6040516020818303038152906040527fe04d4f97000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090508473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518363ffffffff1660e01b815260040161018d92919061091e565b6020604051808303816000875af11580156101ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d0919061095c565b610206576040517f8164f84200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637993c1e0888888856040518563ffffffff1660e01b815260040161026594939291906109de565b600060405180830381600087803b15801561027f57600080fd5b505af1158015610293573d6000803e3d6000fd5b5050505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008383836040516024016102db939291906108e0565b6040516020818303038152906040527fe04d4f97000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630ac7c44c86836040518363ffffffff1660e01b81526004016103b5929190610a31565b600060405180830381600087803b1580156103cf57600080fd5b505af11580156103e3573d6000803e3d6000fd5b505050505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104558261040c565b810181811067ffffffffffffffff821117156104745761047361041d565b5b80604052505050565b60006104876103ee565b9050610493828261044c565b919050565b600067ffffffffffffffff8211156104b3576104b261041d565b5b6104bc8261040c565b9050602081019050919050565b82818337600083830152505050565b60006104eb6104e684610498565b61047d565b90508281526020810184848401111561050757610506610407565b5b6105128482856104c9565b509392505050565b600082601f83011261052f5761052e610402565b5b813561053f8482602086016104d8565b91505092915050565b6000819050919050565b61055b81610548565b811461056657600080fd5b50565b60008135905061057881610552565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105a98261057e565b9050919050565b6105b98161059e565b81146105c457600080fd5b50565b6000813590506105d6816105b0565b92915050565b600067ffffffffffffffff8211156105f7576105f661041d565b5b6106008261040c565b9050602081019050919050565b600061062061061b846105dc565b61047d565b90508281526020810184848401111561063c5761063b610407565b5b6106478482856104c9565b509392505050565b600082601f83011261066457610663610402565b5b813561067484826020860161060d565b91505092915050565b60008115159050919050565b6106928161067d565b811461069d57600080fd5b50565b6000813590506106af81610689565b92915050565b60008060008060008060c087890312156106d2576106d16103f8565b5b600087013567ffffffffffffffff8111156106f0576106ef6103fd565b5b6106fc89828a0161051a565b965050602061070d89828a01610569565b955050604061071e89828a016105c7565b945050606087013567ffffffffffffffff81111561073f5761073e6103fd565b5b61074b89828a0161064f565b935050608061075c89828a01610569565b92505060a061076d89828a016106a0565b9150509295509295509295565b6107838161059e565b82525050565b600060208201905061079e600083018461077a565b92915050565b600080600080608085870312156107be576107bd6103f8565b5b600085013567ffffffffffffffff8111156107dc576107db6103fd565b5b6107e88782880161051a565b945050602085013567ffffffffffffffff811115610809576108086103fd565b5b6108158782880161064f565b935050604061082687828801610569565b9250506060610837878288016106a0565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b8381101561087d578082015181840152602081019050610862565b60008484015250505050565b600061089482610843565b61089e818561084e565b93506108ae81856020860161085f565b6108b78161040c565b840191505092915050565b6108cb81610548565b82525050565b6108da8161067d565b82525050565b600060608201905081810360008301526108fa8186610889565b905061090960208301856108c2565b61091660408301846108d1565b949350505050565b6000604082019050610933600083018561077a565b61094060208301846108c2565b9392505050565b60008151905061095681610689565b92915050565b600060208284031215610972576109716103f8565b5b600061098084828501610947565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006109b082610989565b6109ba8185610994565b93506109ca81856020860161085f565b6109d38161040c565b840191505092915050565b600060808201905081810360008301526109f881876109a5565b9050610a0760208301866108c2565b610a14604083018561077a565b8181036060830152610a2681846109a5565b905095945050505050565b60006040820190508181036000830152610a4b81856109a5565b90508181036020830152610a5f81846109a5565b9050939250505056fea2646970667358221220d08d36409067011bf832bfe6cc5b40052331ecb375ff7a1773c689ebf27f9e9364736f6c63430008120033";

type SenderZEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderZEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SenderZEVM__factory extends ContractFactory {
  constructor(...args: SenderZEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SenderZEVM> {
    return super.deploy(_gateway, overrides || {}) as Promise<SenderZEVM>;
  }
  override getDeployTransaction(
    _gateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gateway, overrides || {});
  }
  override attach(address: string): SenderZEVM {
    return super.attach(address) as SenderZEVM;
  }
  override connect(signer: Signer): SenderZEVM__factory {
    return super.connect(signer) as SenderZEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderZEVMInterface {
    return new utils.Interface(_abi) as SenderZEVMInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SenderZEVM {
    return new Contract(address, _abi, signerOrProvider) as SenderZEVM;
  }
}
