/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ZRC20New,
  ZRC20NewInterface,
} from "../../../../contracts/zevm/ZRC20New.sol/ZRC20New";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "chainid_",
        type: "uint256",
      },
      {
        internalType: "enum CoinType",
        name: "coinType_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "gasLimit_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "systemContractAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gatewayContractAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotFungibleModule",
    type: "error",
  },
  {
    inputs: [],
    name: "GasFeeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSender",
    type: "error",
  },
  {
    inputs: [],
    name: "LowAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "LowBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroGasCoin",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroGasPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "from",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "UpdatedGasLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "UpdatedProtocolFlatFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "systemContract",
        type: "address",
      },
    ],
    name: "UpdatedSystemContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COIN_TYPE",
    outputs: [
      {
        internalType: "enum CoinType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FUNGIBLE_MODULE_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GATEWAY_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_FLAT_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYSTEM_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "updateGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "protocolFlatFee",
        type: "uint256",
      },
    ],
    name: "updateProtocolFlatFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "updateSystemContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "to",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawGasFee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620029a9380380620029a9833981810160405281019062000037919062000459565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620000b1576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760079081620000c29190620007a1565b508660089081620000d49190620007a1565b5085600960006101000a81548160ff021916908360ff16021790555084608081815250508360028111156200010e576200010d62000888565b5b60a081600281111562000126576200012562000888565b5b8152505082600281905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050620008b7565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200022982620001de565b810181811067ffffffffffffffff821117156200024b576200024a620001ef565b5b80604052505050565b600062000260620001c0565b90506200026e82826200021e565b919050565b600067ffffffffffffffff821115620002915762000290620001ef565b5b6200029c82620001de565b9050602081019050919050565b60005b83811015620002c9578082015181840152602081019050620002ac565b60008484015250505050565b6000620002ec620002e68462000273565b62000254565b9050828152602081018484840111156200030b576200030a620001d9565b5b62000318848285620002a9565b509392505050565b600082601f830112620003385762000337620001d4565b5b81516200034a848260208601620002d5565b91505092915050565b600060ff82169050919050565b6200036b8162000353565b81146200037757600080fd5b50565b6000815190506200038b8162000360565b92915050565b6000819050919050565b620003a68162000391565b8114620003b257600080fd5b50565b600081519050620003c6816200039b565b92915050565b60038110620003da57600080fd5b50565b600081519050620003ee81620003cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200042182620003f4565b9050919050565b620004338162000414565b81146200043f57600080fd5b50565b600081519050620004538162000428565b92915050565b600080600080600080600080610100898b0312156200047d576200047c620001ca565b5b600089015167ffffffffffffffff8111156200049e576200049d620001cf565b5b620004ac8b828c0162000320565b985050602089015167ffffffffffffffff811115620004d057620004cf620001cf565b5b620004de8b828c0162000320565b9750506040620004f18b828c016200037a565b9650506060620005048b828c01620003b5565b9550506080620005178b828c01620003dd565b94505060a06200052a8b828c01620003b5565b93505060c06200053d8b828c0162000442565b92505060e0620005508b828c0162000442565b9150509295985092959890939650565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005b357607f821691505b602082108103620005c957620005c86200056b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005f4565b6200063f8683620005f4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006826200067c620006768462000391565b62000657565b62000391565b9050919050565b6000819050919050565b6200069e8362000661565b620006b6620006ad8262000689565b84845462000601565b825550505050565b600090565b620006cd620006be565b620006da81848462000693565b505050565b5b818110156200070257620006f6600082620006c3565b600181019050620006e0565b5050565b601f82111562000751576200071b81620005cf565b6200072684620005e4565b8101602085101562000736578190505b6200074e6200074585620005e4565b830182620006df565b50505b505050565b600082821c905092915050565b6000620007766000198460080262000756565b1980831691505092915050565b600062000791838362000763565b9150826002028217905092915050565b620007ac8262000560565b67ffffffffffffffff811115620007c857620007c7620001ef565b5b620007d482546200059a565b620007e182828562000706565b600060209050601f83116001811462000819576000841562000804578287015190505b62000810858262000783565b86555062000880565b601f1984166200082986620005cf565b60005b8281101562000853578489015182556001820191506020850194506020810190506200082c565b868310156200087357848901516200086f601f89168262000763565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a0516120be620008eb60003960006109580152600081816108a201528181610c160152610d3b01526120be6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806385e1f4d0116100c3578063d9eeebed1161007c578063d9eeebed146103cc578063dd62ed3e146103eb578063e2f535b81461041b578063eddeb12314610439578063f2441b3214610455578063f687d12a146104735761014d565b806385e1f4d0146102f657806395d89b4114610314578063a3413d0314610332578063a9059cbb14610350578063c701262614610380578063c835d7cc146103b05761014d565b8063313ce56711610115578063313ce5671461020c5780633ce4a5bc1461022a57806342966c681461024857806347e7ef24146102785780634d8943bb146102a857806370a08231146102c65761014d565b806306fdde0314610152578063091d278814610170578063095ea7b31461018e57806318160ddd146101be57806323b872dd146101dc575b600080fd5b61015a61048f565b6040516101679190611803565b60405180910390f35b610178610521565b604051610185919061183e565b60405180910390f35b6101a860048036038101906101a391906118f7565b610527565b6040516101b59190611952565b60405180910390f35b6101c6610545565b6040516101d3919061183e565b60405180910390f35b6101f660048036038101906101f1919061196d565b61054f565b6040516102039190611952565b60405180910390f35b610214610647565b60405161022191906119dc565b60405180910390f35b61023261065e565b60405161023f9190611a06565b60405180910390f35b610262600480360381019061025d9190611a21565b610676565b60405161026f9190611952565b60405180910390f35b610292600480360381019061028d91906118f7565b61068b565b60405161029f9190611952565b60405180910390f35b6102b0610851565b6040516102bd919061183e565b60405180910390f35b6102e060048036038101906102db9190611a4e565b610857565b6040516102ed919061183e565b60405180910390f35b6102fe6108a0565b60405161030b919061183e565b60405180910390f35b61031c6108c4565b6040516103299190611803565b60405180910390f35b61033a610956565b6040516103479190611af2565b60405180910390f35b61036a600480360381019061036591906118f7565b61097a565b6040516103779190611952565b60405180910390f35b61039a60048036038101906103959190611c42565b610998565b6040516103a79190611952565b60405180910390f35b6103ca60048036038101906103c59190611a4e565b610adf565b005b6103d4610bd2565b6040516103e2929190611c9e565b60405180910390f35b61040560048036038101906104009190611cc7565b610e1f565b604051610412919061183e565b60405180910390f35b610423610ea6565b6040516104309190611a06565b60405180910390f35b610453600480360381019061044e9190611a21565b610ecc565b005b61045d610f86565b60405161046a9190611a06565b60405180910390f35b61048d60048036038101906104889190611a21565b610faa565b005b60606007805461049e90611d36565b80601f01602080910402602001604051908101604052809291908181526020018280546104ca90611d36565b80156105175780601f106104ec57610100808354040283529160200191610517565b820191906000526020600020905b8154815290600101906020018083116104fa57829003601f168201915b5050505050905090565b60025481565b600061053b610534611064565b848461106c565b6001905092915050565b6000600654905090565b600061055c848484611223565b6000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006105a7611064565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561061e576040517f10bad14700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063b8561062a611064565b85846106369190611d96565b61106c565b60019150509392505050565b6000600960009054906101000a900460ff16905090565b73735b14bb79463307aacbed86daf3322b1e6226ab81565b6000610682338361147d565b60019050919050565b600073735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610729575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b80156107835750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156107ba576040517fddb5de5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107c48383611634565b8273ffffffffffffffffffffffffffffffffffffffff167f67fc7bdaed5b0ec550d8706b87d60568ab70c6b781263c70101d54cd1564aab373735b14bb79463307aacbed86daf3322b1e6226ab6040516020016108219190611e12565b6040516020818303038152906040528460405161083f929190611e82565b60405180910390a26001905092915050565b60035481565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600880546108d390611d36565b80601f01602080910402602001604051908101604052809291908181526020018280546108ff90611d36565b801561094c5780601f106109215761010080835404028352916020019161094c565b820191906000526020600020905b81548152906001019060200180831161092f57829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061098e610987611064565b8484611223565b6001905092915050565b60008060006109a5610bd2565b915091508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3373735b14bb79463307aacbed86daf3322b1e6226ab846040518463ffffffff1660e01b81526004016109fa93929190611eb2565b6020604051808303816000875af1158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d9190611f15565b610a73576040517f0a7cd6d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a7d338561147d565b3373ffffffffffffffffffffffffffffffffffffffff167f9ffbffc04a397460ee1dbe8c9503e098090567d6b7f4b3c02a8617d800b6d955868684600354604051610acb9493929190611f42565b60405180910390a260019250505092915050565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b58576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd55614e962c5fd6ece71614f6348d702468a997a394dd5e5c1677950226d97ae81604051610bc79190611a06565b60405180910390a150565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630be155477f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610c51919061183e565b602060405180830381865afa158015610c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c929190611fa3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cfa576040517f78fff39600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7fd7afb7f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610d76919061183e565b602060405180830381865afa158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db79190611fe5565b905060008103610df3576040517fe661aed000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060035460025483610e069190612012565b610e109190612054565b90508281945094505050509091565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f45576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003819055507fef13af88e424b5d15f49c77758542c1938b08b8b95b91ed0751f98ba99000d8f81604051610f7b919061183e565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73735b14bb79463307aacbed86daf3322b1e6226ab73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611023576040517f2b2add3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806002819055507fff5788270f43bfc1ca41c503606d2594aa3023a1a7547de403a3e2f146a4a80a81604051611059919061183e565b60405180910390a150565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110d2576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611138576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611216919061183e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611289576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ef576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561136d576040517ffe382aa700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81816113799190611d96565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461140b9190612054565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161146f919061183e565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114e3576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611561576040517ffe382aa700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818161156d9190611d96565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600660008282546115c29190611d96565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611627919061183e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361169a576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600660008282546116ac9190612054565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117029190612054565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611767919061183e565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117ad578082015181840152602081019050611792565b60008484015250505050565b6000601f19601f8301169050919050565b60006117d582611773565b6117df818561177e565b93506117ef81856020860161178f565b6117f8816117b9565b840191505092915050565b6000602082019050818103600083015261181d81846117ca565b905092915050565b6000819050919050565b61183881611825565b82525050565b6000602082019050611853600083018461182f565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118988261186d565b9050919050565b6118a88161188d565b81146118b357600080fd5b50565b6000813590506118c58161189f565b92915050565b6118d481611825565b81146118df57600080fd5b50565b6000813590506118f1816118cb565b92915050565b6000806040838503121561190e5761190d611863565b5b600061191c858286016118b6565b925050602061192d858286016118e2565b9150509250929050565b60008115159050919050565b61194c81611937565b82525050565b60006020820190506119676000830184611943565b92915050565b60008060006060848603121561198657611985611863565b5b6000611994868287016118b6565b93505060206119a5868287016118b6565b92505060406119b6868287016118e2565b9150509250925092565b600060ff82169050919050565b6119d6816119c0565b82525050565b60006020820190506119f160008301846119cd565b92915050565b611a008161188d565b82525050565b6000602082019050611a1b60008301846119f7565b92915050565b600060208284031215611a3757611a36611863565b5b6000611a45848285016118e2565b91505092915050565b600060208284031215611a6457611a63611863565b5b6000611a72848285016118b6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611abb57611aba611a7b565b5b50565b6000819050611acc82611aaa565b919050565b6000611adc82611abe565b9050919050565b611aec81611ad1565b82525050565b6000602082019050611b076000830184611ae3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b4f826117b9565b810181811067ffffffffffffffff82111715611b6e57611b6d611b17565b5b80604052505050565b6000611b81611859565b9050611b8d8282611b46565b919050565b600067ffffffffffffffff821115611bad57611bac611b17565b5b611bb6826117b9565b9050602081019050919050565b82818337600083830152505050565b6000611be5611be084611b92565b611b77565b905082815260208101848484011115611c0157611c00611b12565b5b611c0c848285611bc3565b509392505050565b600082601f830112611c2957611c28611b0d565b5b8135611c39848260208601611bd2565b91505092915050565b60008060408385031215611c5957611c58611863565b5b600083013567ffffffffffffffff811115611c7757611c76611868565b5b611c8385828601611c14565b9250506020611c94858286016118e2565b9150509250929050565b6000604082019050611cb360008301856119f7565b611cc0602083018461182f565b9392505050565b60008060408385031215611cde57611cdd611863565b5b6000611cec858286016118b6565b9250506020611cfd858286016118b6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d4e57607f821691505b602082108103611d6157611d60611d07565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611da182611825565b9150611dac83611825565b9250828203905081811115611dc457611dc3611d67565b5b92915050565b60008160601b9050919050565b6000611de282611dca565b9050919050565b6000611df482611dd7565b9050919050565b611e0c611e078261188d565b611de9565b82525050565b6000611e1e8284611dfb565b60148201915081905092915050565b600081519050919050565b600082825260208201905092915050565b6000611e5482611e2d565b611e5e8185611e38565b9350611e6e81856020860161178f565b611e77816117b9565b840191505092915050565b60006040820190508181036000830152611e9c8185611e49565b9050611eab602083018461182f565b9392505050565b6000606082019050611ec760008301866119f7565b611ed460208301856119f7565b611ee1604083018461182f565b949350505050565b611ef281611937565b8114611efd57600080fd5b50565b600081519050611f0f81611ee9565b92915050565b600060208284031215611f2b57611f2a611863565b5b6000611f3984828501611f00565b91505092915050565b60006080820190508181036000830152611f5c8187611e49565b9050611f6b602083018661182f565b611f78604083018561182f565b611f85606083018461182f565b95945050505050565b600081519050611f9d8161189f565b92915050565b600060208284031215611fb957611fb8611863565b5b6000611fc784828501611f8e565b91505092915050565b600081519050611fdf816118cb565b92915050565b600060208284031215611ffb57611ffa611863565b5b600061200984828501611fd0565b91505092915050565b600061201d82611825565b915061202883611825565b925082820261203681611825565b9150828204841483151761204d5761204c611d67565b5b5092915050565b600061205f82611825565b915061206a83611825565b925082820190508082111561208257612081611d67565b5b9291505056fea2646970667358221220f6b4bd4a2ab905f93a1e656c0e2e3fe1c1d580c93726d7631468172618fe6d7364736f6c63430008120033";

type ZRC20NewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZRC20NewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZRC20New__factory extends ContractFactory {
  constructor(...args: ZRC20NewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    chainid_: PromiseOrValue<BigNumberish>,
    coinType_: PromiseOrValue<BigNumberish>,
    gasLimit_: PromiseOrValue<BigNumberish>,
    systemContractAddress_: PromiseOrValue<string>,
    gatewayContractAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZRC20New> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      chainid_,
      coinType_,
      gasLimit_,
      systemContractAddress_,
      gatewayContractAddress_,
      overrides || {}
    ) as Promise<ZRC20New>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    chainid_: PromiseOrValue<BigNumberish>,
    coinType_: PromiseOrValue<BigNumberish>,
    gasLimit_: PromiseOrValue<BigNumberish>,
    systemContractAddress_: PromiseOrValue<string>,
    gatewayContractAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      chainid_,
      coinType_,
      gasLimit_,
      systemContractAddress_,
      gatewayContractAddress_,
      overrides || {}
    );
  }
  override attach(address: string): ZRC20New {
    return super.attach(address) as ZRC20New;
  }
  override connect(signer: Signer): ZRC20New__factory {
    return super.connect(signer) as ZRC20New__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZRC20NewInterface {
    return new utils.Interface(_abi) as ZRC20NewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZRC20New {
    return new Contract(address, _abi, signerOrProvider) as ZRC20New;
  }
}
